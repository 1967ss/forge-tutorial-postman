{
	"info": {
		"_postman_id": "53af16cc-006c-4608-a4fd-cc0640cc14d7",
		"name": "DAS Tutorial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Task 1 - Obtain an Access Token",
			"item": [
				{
					"name": "Get an Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3df16796-5a03-47e5-a63f-00989847157c",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"dasApiToken\", body[\"access_token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "code:all data:write data:read bucket:create bucket:delete ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/authentication/v1/authenticate",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"authentication",
								"v1",
								"authenticate"
							]
						},
						"description": "This request to the Authentication API obtains an access token with the scope required for this tutorial. This token is used inside the Authorization header to authorize all the subsequent requests.\n\n&nbsp;\n\nBefore you send this request:\n 1. Follow the instructions on [Get Started with Forge in Three Steps](https://forge.autodesk.com/developer/start-now/signup) to create a Forge App and obtain a Client ID and Client Secret. \n At the *Add Services to Forge* stage, make sure that you select **Design Automation API V3** and **Data Management API**. \n\n 2.  Jot down the Client ID and Client Secret, and specify them as the values for the Postman Environment Variables `client_id` and `client_secret` respectively.\n\n&nbsp;\n\nOnce you send this request, Postman parses the response and extracts the access token. Thereafter a script specified in the **Tests** tab below saves the access token to a Postman Variable named `dasApiToken`. This Postman Collection uses this variable to authenticate all subsequent requests you send to Forge. The token expires in one hour. If it expires before you are able to complete this tutorial, you can send this request again to obtain a fresh token."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task 2 - Create a Nickname",
			"item": [
				{
					"name": "Create Nickname",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"nickname\": \"{{dasNickName}}\"\n}"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/da/us-east/v3/forgeapps/me",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"da",
								"us-east",
								"v3",
								"forgeapps",
								"me"
							]
						},
						"description": "This request to the Design Automation API sets a Nickname for your Forge App.\n\n&nbsp;\n\nBefore you send the request:\n - Specify the Nickname as the value of the Postman Variable `dasNickName`. This enables the Nickname to be used in subsequent requests as well.\n\n&nbsp;\n\n**Notes:**\n\n- Once your add data to a Forge App, you are not allowed to set a Nickname for the app. The only way you can assign a Nickname to an app with data is by first calling the `[DELETE] /forgeapps/me` endpoint and deleting all data associated with that app (including any existing nickname). The request **Clean up HTTP Requests > Delete Forge App Data in Design Automation** in this Postman Collection calls this endpoint (`[DELETE] /forgeapps/me`) and clears the app of all data.\n\n- If you get stuck while working on this tutorial, and are unable to proceed, use this request to clear all data from the app, and restart from Task 1.\n\n- Nicknames must be globally unique.  If the Nickname is already in use, even by someone else, Forge returns a `409 Conflict` error when you try to set the Nickname. If you encounter this error, change the Nickname and try again."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task 3 - Publish an Activity",
			"item": [
				{
					"name": "Create a New Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2642d8f-273b-4601-a1c0-150950b79ae4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"executeScript\",\n    \"commandLine\": \"\\\"$(engine.path)/3dsmaxbatch.exe\\\" -sceneFile \\\"$(args[InputMaxScene].path)\\\" \\\"$(args[MaxscriptToExecute].path)\\\" -v 5\",\n    \"description\": \"Execute a maxscript on a max file provided in a zip\",\n    \"appbundles\": [\n    \t],\n    \"engine\" : \"Autodesk.3dsMax+2020\",\n    \"parameters\": {\n    \t\"InputMaxScene\": {\n            \"zip\": false,\n            \"ondemand\": false,\n            \"verb\": \"get\",\n            \"description\": \"Input for providing the 3ds Max scene to be loaded before executing the script\",\n            \"required\": true,\n            \"localName\": \"workingFolder\"\n        },\n        \"MaxscriptToExecute\": {\n            \"zip\": false,\n            \"verb\": \"get\",\n            \"description\": \"The maxscript to run using 3dsmaxbatch.exe\",\n            \"ondemand\": false,\n            \"required\": true,\n            \"localName\": \"maxscriptToExecute.ms\"\n        },\n        \"OutputZip\": {\n            \"zip\": true,\n            \"ondemand\": false,\n            \"verb\": \"put\",\n            \"description\": \"Gather everything in the working folder inside a zip for output\",\n            \"required\": true,\n            \"localName\": \"workingFolder\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/da/us-east/v3/activities",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"da",
								"us-east",
								"v3",
								"activities"
							]
						},
						"description": "This request to the Design Automation V3 API creates an activity.\r\nIn Design Automation an Activity specifies an action that can be executed using a specified engine.\r\n\r\nThis request to the Design Automation API creates an Activity. An Activity is an action that can be executed in Design Automation. This request creates an Activity that invokes *3dsmaxbatch.exe*, to run a specified MAXScript on a specified Scene file.\r\n\r\n&nbsp;\r\n\r\n**Notes:**\r\n - The JSON payload for this request contains several key attributes. See the description of these attributes in the [corresponding task on the Forge Portal](https://forge.autodesk.com/en/docs/design-automation/v3/tutorials/3dsmax/task-2-publish-activity/)."
					},
					"response": []
				},
				{
					"name": "Create an Alias for the Activity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}} "
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"tutorial\",\r\n    \"version\": 1\r\n}"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/da/us-east/v3/activities/executeScript/aliases",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"da",
								"us-east",
								"v3",
								"activities",
								"executeScript",
								"aliases"
							]
						},
						"description": "This request to the Design Automation API creates an alias for the Activity you created earlier. \r\n\r\n&nbsp;\r\n\r\nThe id of an Activity alone is not sufficient when you instruct Design Automation to execute it. You must use an Alias to specify which version of the Activity to execute. You can think of an Alias as a tag that points to a particular version of an Activity.\r\nThe version an Alias points to can be changed as you develop more versions of a given activity.\r\nThe request **Task 3 - Publish Activity > Create New Activity** created the version 1 of the Activity.\r\nThis request will now create an Alias named \"tutorial\" to reference version 1."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task 4 - Prepare Cloud Storage",
			"item": [
				{
					"name": "Create Bucket",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8f08e2f-9a04-4e7f-a273-34119fb024cf",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"ossBucketKey\", body[\"bucketKey\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"bucketKey\": \"{{ossBucketKey}}\",\n\t\"access\": \"full\",\n\t\"policyKey\": \"transient\"\n}\n"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets"
							]
						},
						"description": "This request to the Data Management API creates a Bucket in the Object Storage Service (OSS) to store the input dwg file and the resulting text file.\n\n&nbsp;\n\nBefore you send the request:\n - Specify the name of the Bucket as the value of the Postman Variable `ossBucketKey`\n \n&nbsp;\n\n**Notes:**\n - The Bucket name needs to be unique throughout the OSS service. If a Bucket with the name you specified already exists, you may need to change the value of this variable.\n - The Bucket name must consist of only lower case characters, the numbers 0-9, and the underscore (_) character."
					},
					"response": []
				},
				{
					"name": "Upload Input Zip File to OSS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bff56ac-f537-44ea-8154-d0012b635d52",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"ossZipFileObjectKey\", body[\"objectKey\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "file"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets/{{ossBucketKey}}/objects/{{$guid}}",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets",
								"{{ossBucketKey}}",
								"objects",
								"{{$guid}}"
							]
						},
						"description": "This request to the Data Management API uploads a zip file containing the 3ds Max file to the Bucket you just created.\r\n\r\n&nbsp;\r\n\r\nBefore sending the request:\r\n\r\n 1. Download the file *input.zip* from the [tutorial_data folder](https://github.com/Autodesk-Forge/forge-tutorial-postman/tree/master/DA4ACAD/tutorial_data) of the repository that contained this Postman Collection.\r\n 3. Go to the **Body** tab below.\r\n 4. Click **Select Files**.\r\n 5. Pick *input.zip*, which you downloaded in step 1.\r\n \r\n&nbsp;\r\n\r\nNote the use of the Postman Dynamic variable `guid` as a query string parameter for the object key of the zip file. This variable generates a unique ID for the object key. A script specified in the **Tests** tab saves the object key to a Postman Environment Variable named `ossZipFileObjectKey`."
					},
					"response": []
				},
				{
					"name": "Upload Input MAXScript file to OSS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d594927-c8cd-4a81-a867-f1dce464d1da",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"ossScriptFileObjectKey\", body[\"objectKey\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "file"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets/{{ossBucketKey}}/objects/{{$guid}}",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets",
								"{{ossBucketKey}}",
								"objects",
								"{{$guid}}"
							]
						},
						"description": "This request to the Data Management API uploads a zip file containing the 3ds Max file to the Bucket you just created.\r\n\r\n&nbsp;\r\n\r\nBefore sending the request:\r\n\r\n 1. Download the file *Twistit.ms* from the [tutorial_data folder](https://github.com/Autodesk-Forge/forge-tutorial-postman/tree/master/DA4ACAD/tutorial_data) of the repository that contained this Postman Collection.\r\n 3. Go to the **Body** tab below.\r\n 4. Click **Select Files**.\r\n 5. Pick *Twistit.ms*, which you downloaded in step 1.\r\n \r\n&nbsp;\r\n\r\nNote the use of the Postman Dynamic variable `guid` as a query string parameter for the object key of the zip file. This variable generates a unique ID for the object key. A script specified in the **Tests** tab saves the object key to a Postman Environment Variable named `ossScriptFileObjectKey`."
					},
					"response": []
				},
				{
					"name": "Get Temporary Download URL for the Input Zip",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58eb33f6-d95a-4092-ba00-823348dec87a",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"ossZipFileSignedUrl\", body[\"signedUrl\"]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}\n"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets/{{ossBucketKey}}/objects/{{ossZipFileObjectKey}}/signed",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets",
								"{{ossBucketKey}}",
								"objects",
								"{{ossZipFileObjectKey}}",
								"signed"
							]
						},
						"description": "This request to the Data Management API creates a temporary download URL for the input zip file. The URL expires in 60 minutes.\n\n&nbsp;\n\nOnce you send the request, the script specified in the **Tests** tab parses the response and writes the download URL to a variable `ossZipFileSignedUrl`."
					},
					"response": []
				},
				{
					"name": "Get Temporary Download URL for the Input Script",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "334bc99a-0dec-4266-a1ea-1f162fcd1097",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"ossScriptFileSignedUrl\", body[\"signedUrl\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}\n"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets/{{ossBucketKey}}/objects/{{ossScriptFileObjectKey}}/signed",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets",
								"{{ossBucketKey}}",
								"objects",
								"{{ossScriptFileObjectKey}}",
								"signed"
							]
						},
						"description": "This request to the Data Management API creates a temporary download URL for the input zip file. The URL expires in 60 minutes.\n\n&nbsp;\n\nOnce you send the request, the script specified in the **Tests** tab parses the response and writes the upload URL to a variable `ossScriptFileSignedUrl`."
					},
					"response": []
				},
				{
					"name": "Get Temporary Upload URL for the Output Zip",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fbfce144-349e-4ea7-b647-79f6cb972ed1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7c7a5754-f73b-438a-b2f9-6951fe05a451",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"ossOutputFileSignedUrl\", body[\"signedUrl\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets/{{ossBucketKey}}/objects/{{ossOutputFileObjectKey}}/signed?access=readwrite",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets",
								"{{ossBucketKey}}",
								"objects",
								"{{ossOutputFileObjectKey}}",
								"signed"
							],
							"query": [
								{
									"key": "access",
									"value": "readwrite"
								}
							]
						},
						"description": "This request to the Data Management API creates a temporary upload URL to enable Design Automation to upload the output of the Activity you created earlier.\n\n&nbsp;\n\nBefore you send this request:\n - Specify an Object Key (a name to identify the output file, once it is uploaded to OSS) as the value of the Postman Variable  `ossOutputFileObjectKey`\n\n&nbsp;\n \nOnce you send the request, the script specified in the **Tests** tab parses the response and writes the upload URL to a variable `ossUploadURL`."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task 5 - Submit a WorkItem",
			"item": [
				{
					"name": "Send WorkItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cf9c997-7d7a-4f98-aadb-6880aa58e299",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"dasWorkItemId\", body[\"id\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"activityId\": \"{{dasNickName}}.executeScript+tutorial\",\n\t\"arguments\": {\n\t\t\"InputMaxScene\": {\n            \"url\": \"{{ossZipFileSignedUrl}}\",\n            \"verb\": \"get\",\n            \"pathInZip\": \"sceneName.max\"\n        },\n        \"MaxscriptToExecute\": {\n        \t\"url\": \"{{ossScriptFileSignedUrl}}\",\n            \"verb\": \"get\"\n        },\n        \"OutputZip\": {\n        \t\"url\": \"{{ossOutputFileSignedUrl}}\",\n            \"verb\": \"put\"\n        }\n\t}\n}"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/da/us-east/v3/workitems",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"da",
								"us-east",
								"v3",
								"workitems"
							]
						},
						"description": "This request to the Design Automation API creates a WorkItem that kicks off the execution of the Activity that you created in Task 2.\n\n&nbsp;\n\nThe relationship between an Activity and a WorkItem can be thought of as a “function definition” and “function call”, respectively. Named parameters of the Activity have corresponding named arguments of the WorkItem. Like in function calls, optional parameters of the Activity can be skipped and left unspecified while posting a WorkItem.\n\n&nbsp;\n\nInspect the **Body** tab below to see how values for the parameters specified while defining the Activity are supplied as arguments in the WorkItem. \n\n&nbsp;\n\nOnce you send the request, the script specified in the **Tests** tab parses the response and writes the WorkItem Id to a variable `dasWorkItemId`."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task 6 - Download the Results ",
			"item": [
				{
					"name": "Check Status of the WorkItem",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"url": {
							"raw": "https://developer.api.autodesk.com/da/us-east/v3/workitems/{{dasWorkItemId}}",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"da",
								"us-east",
								"v3",
								"workitems",
								"{{dasWorkItemId}}"
							]
						},
						"description": "This request to the Design Automation API queries the status of the WorkItem."
					},
					"response": []
				},
				{
					"name": "Download Output from OSS",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets/{{ossBucketKey}}/objects/{{ossOutputFileObjectKey}}",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets",
								"{{ossBucketKey}}",
								"objects",
								"{{ossOutputFileObjectKey}}"
							]
						},
						"description": "This request to the Data Management API will let you download the result zip file that have been uploaded by Design Automation to the Object Storage Service (OSS).\r\n\r\n&nbsp;\r\n\r\nTo save the result back to disk locally:\r\n\r\n1. In the response area, click **Save Response > Save to a file**. The output file downloads. \r\n2. Save the file as a *.zip* file, when prompted to."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Clean up HTTP Requests",
			"item": [
				{
					"name": "Delete Forge App Data in Design Automation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/da/us-east/v3/forgeapps/me",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"da",
								"us-east",
								"v3",
								"forgeapps",
								"me"
							]
						},
						"description": "This request to the Design Automation API deletes all Design Automation related information owned by your Forge app."
					},
					"response": []
				},
				{
					"name": "Delete OSS Bucket",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87cf6349-8950-428a-ae7a-59a5ff157444",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{dasApiToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://developer.api.autodesk.com/oss/v2/buckets/{{ossBucketKey}}",
							"protocol": "https",
							"host": [
								"developer",
								"api",
								"autodesk",
								"com"
							],
							"path": [
								"oss",
								"v2",
								"buckets",
								"{{ossBucketKey}}"
							]
						},
						"description": "This request to the Data Management API will delete the bucket that you created in Task 4, and every file that it contains."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}